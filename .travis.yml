sudo: true

language: c

compiler:
  - gcc

env:
  global:
  - COMPILER_CC=gcc
  - COMPILER_CXX=g++

include:
  - os: linux
    dist: trusty

jobs:
  fast_finish: true
  include:
  - stage: "msr safe"
    before_script:
      - date
      - sudo apt-get install git
      - sudo apt-get install linux-headers-`uname -r`
      - git clone https://github.com/llnl/msr-safe
    install:
      # none
    after_script:
      - date
    script:
      - which gcc
      - uname -r
      - cd msr-safe
      - make
      - sudo insmod msr-safe.ko
      - ls -l /dev/cpu
      - ls -l /dev/cpu/*/msr_safe
      - WL=$(printf 'wl_%.2x%x\n' $(lscpu | grep "CPU family:" | awk -F: '{print $2}') $(lscpu | grep "Model:" | awk -F: '{print $2}'))
      - echo -e "Whitelist: ${WL}"

  - stage: "compile check"
    env:
      - BUILD_SHARED_LIBS=ON
        BUILD_DOCS=ON
        BUILD_TESTS=OFF
        VARIORUM_LOG=OFF
        VARIORUM_WITH_INTEL=ON
        VARIORUM_WITH_IBM=OFF
        VARIORUM_WITH_NVIDIA=OFF
        VARIORUM_WITH_AMD=OFF
    install:
      # none
    before_script:
      - date
      - sudo apt-get install python-sphinx
      - sudo apt-get install gfortran
    after_script:
      - date
    script:
      - ./scripts/travis/build.sh

  - env:
      - BUILD_SHARED_LIBS=ON
        BUILD_DOCS=OFF
        BUILD_TESTS=OFF
        VARIORUM_LOG=ON
        VARIORUM_WITH_INTEL=ON
        VARIORUM_WITH_IBM=OFF
        VARIORUM_WITH_NVIDIA=OFF
        VARIORUM_WITH_AMD=OFF
    install:
      # none
    before_script:
      - date
      - sudo apt-get install python-sphinx
      - sudo apt-get install gfortran
    after_script:
      - date
    script:
      - ./scripts/travis/build.sh

  - env:
      - BUILD_SHARED_LIBS=ON
        BUILD_DOCS=OFF
        BUILD_TESTS=OFF
        VARIORUM_LOG=OFF
        VARIORUM_WITH_INTEL=ON
        VARIORUM_WITH_IBM=OFF
        VARIORUM_WITH_NVIDIA=OFF
        VARIORUM_WITH_AMD=OFF
    install:
      # none
    before_script:
      - date
      - sudo apt-get install python-sphinx
      - sudo apt-get install gfortran
    after_script:
      - date
    script:
      - ./scripts/travis/build.sh

  - env:
      - BUILD_SHARED_LIBS=OFF
        BUILD_DOCS=ON
        BUILD_TESTS=OFF
        VARIORUM_LOG=ON
        VARIORUM_WITH_INTEL=ON
        VARIORUM_WITH_IBM=OFF
        VARIORUM_WITH_NVIDIA=OFF
        VARIORUM_WITH_AMD=OFF
    install:
      # none
    before_script:
      - date
      - sudo apt-get install python-sphinx
      - sudo apt-get install gfortran
    after_script:
      - date
    script:
      - ./scripts/travis/build.sh

  - env:
      - BUILD_SHARED_LIBS=OFF
        BUILD_DOCS=ON
        BUILD_TESTS=OFF
        VARIORUM_LOG=OFF
        VARIORUM_WITH_INTEL=ON
        VARIORUM_WITH_IBM=OFF
        VARIORUM_WITH_NVIDIA=OFF
        VARIORUM_WITH_AMD=OFF
    install:
      # none
    before_script:
      - date
      - sudo apt-get install python-sphinx
      - sudo apt-get install gfortran
    after_script:
      - date
    script:
      - ./scripts/travis/build.sh

  - env:
      - BUILD_SHARED_LIBS=OFF
        BUILD_DOCS=OFF
        BUILD_TESTS=OFF
        VARIORUM_LOG=ON
        VARIORUM_WITH_INTEL=ON
        VARIORUM_WITH_IBM=OFF
        VARIORUM_WITH_NVIDIA=OFF
        VARIORUM_WITH_AMD=OFF
    install:
      # none
    before_script:
      - date
      - sudo apt-get install python-sphinx
      - sudo apt-get install gfortran
    after_script:
      - date
    script:
      - ./scripts/travis/build.sh

  - env:
      - BUILD_SHARED_LIBS=OFF
        BUILD_DOCS=OFF
        BUILD_TESTS=OFF
        VARIORUM_LOG=OFF
        VARIORUM_WITH_INTEL=ON
        VARIORUM_WITH_IBM=OFF
        VARIORUM_WITH_NVIDIA=OFF
        VARIORUM_WITH_AMD=OFF
    install:
      # none
    before_script:
      - date
      - sudo apt-get install python-sphinx
      - sudo apt-get install gfortran
    after_script:
      - date
    script:
      - ./scripts/travis/build.sh

  - stage: "style check"
    script:
      - wget https://sourceforge.net/projects/astyle/files/astyle/astyle%203.1/astyle_3.1_linux.tar.gz
      - tar -xf astyle_3.1_linux.tar.gz
      - cd astyle/build/gcc && make
      - export PATH="${PWD}/bin:${PATH}"
      - cd -
      - echo -e "PWD:" ${PWD}
      - ./scripts/astyle-format.sh || travis_terminate 1

notifications:
  email:
    recipients:
      - brink2@llnl.gov
    on_success: always
    on_failure: always
