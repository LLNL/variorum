variables:
  CUSTOM_CI_BUILDS_DIR: "/usr/workspace/variorum/gitlab-runner"
  BUILD_ROOT: ${CI_PROJECT_DIR}

stages:
  - format
  - build

build-quartz-format:
 tags:
   - shell
   - quartz
 stage: format
 script:
   - wget https://sourceforge.net/projects/astyle/files/astyle/astyle%203.1/astyle_3.1_linux.tar.gz
   - tar -xf astyle_3.1_linux.tar.gz
   - cd astyle/build/gcc && make
   - export PATH="${PWD}/bin:${PATH}"
   - cd -
   - echo -e "PWD:" ${PWD}
   - ./scripts/.ci-check-code-format.sh
   - err=$?
   - if [ $err -eq 0 ]; then exit 0; else echo -e "Astyle formatting needed!"; exit 1; fi

build-quartz-format-rst:
 tags:
   - shell
   - quartz
 stage: format
 script:
   - wget https://sourceforge.net/projects/astyle/files/astyle/astyle%203.1/astyle_3.1_linux.tar.gz
   - ./scripts/.ci-check-rst-format.sh

# no access to msr-safe on quartz
build-quartz:
 tags:
   - batch
   - quartz
 stage: build
 script:
   # Build and install rankstr dependency
   - git clone https://github.com/ECP-VeloC/rankstr.git
   - cd rankstr
   - mkdir build install && cd build
   - cmake -DCMAKE_INSTALL_PREFIX=../install ..
   - VERBOSE=1 make -j
   - make install
   - RANKSTR_INSTALL=${PWD}/../install
   - cd ../../
   - export HOSTNAME=`hostname`
   - echo -e "Hostname:" ${HOSTNAME}
   - groups
   - mkdir build-gitlab-quartz && mkdir install-gitlab-quartz
   - cd build-gitlab-quartz
   - export HOST_CONFIG=`ls ../host-configs/quartz-toss_4_x86_64_ib-gcc@10.3.1.cmake`
   - echo -e "HOST_CONFIG:" ${HOST_CONFIG}
   - echo -e "PWD:" ${PWD}
   - cmake -C ${HOST_CONFIG} -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install-gitlab-quartz -DBUILD_TESTS=ON -DENABLE_WARNINGS=ON -DRANKSTR_DIR=${RANKSTR_INSTALL} ../src
   - make VERBOSE=1
   - make install
   #- env CTEST_OUTPUT_ON_FAILURE=1 make test
   #- cd ..
   #- echo -e "PWD:" ${PWD}
   #- which cmake
   #- cmake --version
   #- cd install-gitlab-quartz/examples/using-with-cmake/c
   #- echo -e "PWD:" ${PWD}
   #- mkdir _test_build
   #- cd _test_build
   #- cmake ../
   #- make VERBOSE=1
   #- ./variorum-print-power-example
   #- cd ../../../using-with-make/c
   #- echo -e "PWD:" ${PWD}
   #- make VERBOSE=1
   #- ./variorum-print-power-example
   #- cd ../../using-with-make/cpp
   #- echo -e "PWD:" ${PWD}
   #- make VERBOSE=1
   #- ./variorum-print-power-example
   #- cd ../../using-with-make/fortran
   #- echo -e "PWD:" ${PWD}
   #- make VERBOSE=1
   #- ./ep.W.x

build-lassen-cpu:
 tags:
   - batch
   - lassen
 stage: build
 script:
   - export HOSTNAME=`hostname`
   - echo -e "Hostname:" ${HOSTNAME}
   - groups
   - mkdir build-gitlab-lassen-cpu && mkdir install-gitlab-lassen-cpu
   - cd build-gitlab-lassen-cpu
   - export HOST_CONFIG=`ls ../host-configs/lassen-4.14.0-ppc64le-gcc@8.3.1.cmake`
   - echo -e "HOST_CONFIG:" ${HOST_CONFIG}
   - echo -e "PWD:" ${PWD}
   - cmake -C ${HOST_CONFIG} -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install-gitlab-lassen-cpu -DBUILD_TESTS=ON -DENABLE_WARNINGS=ON ../src
   - make VERBOSE=1
   - make install
   - env CTEST_OUTPUT_ON_FAILURE=1 make test
   - cd ..
   - echo -e "PWD:" ${PWD}
   - which cmake
   - cmake --version
   - cd install-gitlab-lassen-cpu/examples/using-with-cmake/c
   - echo -e "PWD:" ${PWD}
   - mkdir _test_build
   - cd _test_build
   - cmake ../
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../../using-with-make/c
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../using-with-make/cpp
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../using-with-make/fortran
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./ep.W.x

build-lassen-gpu:
 tags:
   - batch
   - lassen
 stage: build
 script:
   - export HOSTNAME=`hostname`
   - echo -e "Hostname:" ${HOSTNAME}
   - groups
   - mkdir build-gitlab-lassen-gpu && mkdir install-gitlab-lassen-gpu
   - cd build-gitlab-lassen-gpu
   - export HOST_CONFIG=`ls ../host-configs/lassen-4.14.0-ppc64le-gcc@8.3.1-cuda@10.1.243.cmake`
   - echo -e "HOST_CONFIG:" ${HOST_CONFIG}
   - echo -e "PWD:" ${PWD}
   - cmake -C ${HOST_CONFIG} -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install-gitlab-lassen-gpu -DBUILD_TESTS=ON -DENABLE_WARNINGS=ON ../src
   - make VERBOSE=1
   - make install
   - env CTEST_OUTPUT_ON_FAILURE=1 make test
   - cd ..
   - echo -e "PWD:" ${PWD}
   - which cmake
   - cmake --version
   - cd install-gitlab-lassen-gpu/examples/using-with-cmake/c
   - echo -e "PWD:" ${PWD}
   - mkdir _test_build
   - cd _test_build
   - cmake ../
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../../using-with-make/c
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../using-with-make/cpp
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../using-with-make/fortran
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./ep.W.x

build-lassen-both:
 tags:
   - batch
   - lassen
 stage: build
 script:
   - export HOSTNAME=`hostname`
   - echo -e "Hostname:" ${HOSTNAME}
   - groups
   - mkdir build-gitlab-lassen-both && mkdir install-gitlab-lassen-both
   - cd build-gitlab-lassen-both
   - export HOST_CONFIG=`ls ../host-configs/lassen-4.14.0-ppc64le-gcc@8.3.1-cuda@10.1.243-both.cmake`
   - echo -e "HOST_CONFIG:" ${HOST_CONFIG}
   - echo -e "PWD:" ${PWD}
   - cmake -C ${HOST_CONFIG} -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install-gitlab-lassen-both -DBUILD_TESTS=ON -DENABLE_WARNINGS=ON ../src
   - make VERBOSE=1
   - make install
# disabling for now
#   - env CTEST_OUTPUT_ON_FAILURE=1 make test
#   - cd ..
#   - echo -e "PWD:" ${PWD}
#   - which cmake
#   - cmake --version
#   - cd install-gitlab-lassen-both/examples/using-with-cmake/c
#   - echo -e "PWD:" ${PWD}
#   - mkdir _test_build
#   - cd _test_build
#   - cmake ../
#   - make VERBOSE=1
#   - ./variorum-print-power-example
#   - cd ../../../using-with-make/c
#   - echo -e "PWD:" ${PWD}
#   - make VERBOSE=1
#   - ./variorum-print-power-example
#   - cd ../../using-with-make/cpp
#   - echo -e "PWD:" ${PWD}
#   - make VERBOSE=1
#   - ./variorum-print-power-example
#   - cd ../../using-with-make/fortran
#   - echo -e "PWD:" ${PWD}
#   - make VERBOSE=1
#   - ./ep.W.x

# no access to msr-safe on catalyst
build-catalyst:
 tags:
   - batch
   - catalyst
 stage: build
 script:
   # Build and install rankstr dependency
   - git clone https://github.com/ECP-VeloC/rankstr.git
   - cd rankstr
   - mkdir build install && cd build
   - cmake -DCMAKE_INSTALL_PREFIX=../install ..
   - VERBOSE=1 make -j
   - make install
   - RANKSTR_INSTALL=${PWD}/../install
   - cd ../../
   - export HOSTNAME=`hostname`
   - echo -e "Hostname:" ${HOSTNAME}
   - groups
   - mkdir build-gitlab-catalyst && mkdir install-gitlab-catalyst
   - cd build-gitlab-catalyst
   - export HOST_CONFIG=`ls ../host-configs/catalyst-toss_3_x86_64_ib-gcc@8.3.1.cmake`
   - echo -e "HOST_CONFIG:" ${HOST_CONFIG}
   - echo -e "PWD:" ${PWD}
   - cmake -C ${HOST_CONFIG} -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install-gitlab-catalyst -DBUILD_TESTS=ON -DENABLE_WARNINGS=ON -DRANKSTR_DIR=${RANKSTR_INSTALL} ../src
   - make VERBOSE=1
   - make install
   #- env CTEST_OUTPUT_ON_FAILURE=1 make test
   #- cd ..
   #- echo -e "PWD:" ${PWD}
   #- which cmake
   #- cmake --version
   #- cd install-gitlab-catalyst/examples/using-with-cmake/c
   #- echo -e "PWD:" ${PWD}
   #- mkdir _test_build
   #- cd _test_build
   #- cmake ../
   #- make VERBOSE=1
   #- ./variorum-print-power-example
   #- cd ../../../using-with-make/c
   #- echo -e "PWD:" ${PWD}
   #- make VERBOSE=1
   #- ./variorum-print-power-example
   #- cd ../../using-with-make/cpp
   #- echo -e "PWD:" ${PWD}
   #- make VERBOSE=1
   #- ./variorum-print-power-example
   #- cd ../../using-with-make/fortran
   #- echo -e "PWD:" ${PWD}
   #- make VERBOSE=1
   #- ./ep.W.x

build-corona:
 tags:
   - corona212-flux-test-batch
   - corona
 variables:
    SCHEDULER_PARAMETERS: "-N 1 -c 1"
 stage: build
 script:
   - export HOSTNAME=`hostname`
   - echo -e "Hostname:" ${HOSTNAME}
   - groups
   - mkdir build-gitlab-corona && mkdir install-gitlab-corona
   - cd build-gitlab-corona
   - export HOST_CONFIG=`ls ../host-configs/corona-4.18.0toss4-x86_64-gcc@10.3.1-rocm@5.2.cmake`
   - echo -e "HOST_CONFIG:" ${HOST_CONFIG}
   - echo -e "PWD:" ${PWD}
   - cmake -C ${HOST_CONFIG} -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install-gitlab-corona -DBUILD_TESTS=ON -DENABLE_WARNINGS=ON ../src
   - make VERBOSE=1
   - make install
   - env CTEST_OUTPUT_ON_FAILURE=1 make test
   - cd ..
   - echo -e "PWD:" ${PWD}
   - which cmake
   - cmake --version
   - cd install-gitlab-corona/examples/using-with-cmake/c
   - echo -e "PWD:" ${PWD}
   - mkdir _test_build
   - cd _test_build
   - cmake ../
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../../using-with-make/c
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../using-with-make/cpp
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1
   - ./variorum-print-power-example
   - cd ../../using-with-make/fortran
   - echo -e "PWD:" ${PWD}
   - make VERBOSE=1 FFLAGS+=-fallow-invalid-boz
   - ./ep.W.x

# build across power lab
build-cztb2:
 tags:
   - shell
   - cztb2
 stage: build
 script:
   - git clone $VARIORUM_ANSIBLE
   - cd variorum-ansible-setup
   - ansible-playbook variorum-powerlab-playbook.yml
